---
name: Debug CLI Trade

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch, tag, or commit SHA to run against (e.g. main or feature/foo)'
        required: false
        type: string

permissions:
  contents: read
  issues: write

jobs:
  run-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Record checked-out commit
        id: head
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install poetry

      - name: Install dependencies
        run: |
          # Always use Poetry for dependency installation to ensure 
          # the project is installed with proper CLI entry points
          poetry install --only=main

      - name: Run CLI trade command
        id: run_cli
        env:
          ALPACA_KEY: ${{ secrets.ALPACA_KEY }}
          ALPACA_SECRET: ${{ secrets.ALPACA_SECRET }}
          ALPACA_ENDPOINT: ${{ secrets.ALPACA_ENDPOINT }}
          EMAIL__FROM_EMAIL: ${{ vars.EMAIL__FROM_EMAIL }}
          EMAIL__TO_EMAIL: ${{ vars.EMAIL__TO_EMAIL }}
          EMAIL__PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          set +e
          poetry run alchemiser trade --ignore-market-hours --verbose > cli_output.log 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          
          # Detect error patterns even if exit code is 0
          if grep -Eiq '(ERROR|CRITICAL|Traceback|Exception)' cli_output.log; then
            echo "error_detected=true" >> $GITHUB_OUTPUT
            echo "=== Detected error patterns in output ==="
            grep -Ein '(ERROR|CRITICAL|Traceback|Exception)' cli_output.log || true
          else
            echo "error_detected=false" >> $GITHUB_OUTPUT
          fi
          
          echo "=== CLI Trade Output ==="
          cat cli_output.log
          echo "=== Exit Code: $exit_code ==="

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: cli-trade-debug-logs
          path: cli_output.log

      - name: Prepare issue content
        if: always() && (steps.run_cli.outputs.exit_code != '0' || steps.run_cli.outputs.error_detected == 'true')
        run: |
          timestamp="$(date -u)"
          cat > issue_content.md << EOF
          # CLI Trade Debug Failure

          **Workflow Run ID**: ${{ github.run_id }}
          **Exit Code**: ${{ steps.run_cli.outputs.exit_code }}
          **Errors Detected in Log**: ${{ steps.run_cli.outputs.error_detected }}
          **Timestamp**: $timestamp
          **Repository**: ${{ github.repository }}
          **Ref**: ${{ inputs.ref != '' && inputs.ref || github.ref_name }}
          **Commit**: ${{ steps.head.outputs.sha }}

          ## Error Lines
          \`\`\`
          EOF
          grep -nEi '(ERROR|CRITICAL|Traceback|Exception)' cli_output.log >> issue_content.md || true
          cat >> issue_content.md << EOF
          \`\`\`

          ## CLI Trade Output Log

          \`\`\`
          EOF
          cat cli_output.log >> issue_content.md
          cat >> issue_content.md << EOF
          \`\`\`

          ## Debugging Information

          This issue was automatically created because the CLI command 
          \`poetry run alchemiser trade\` failed with exit code ${{ steps.run_cli.outputs.exit_code }} or error patterns were detected in the output.

          ### Actions

          - 📥 [Download full logs artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - 🔍 [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ### Next Steps

          1. Review the error output above
          2. Check the imported modules and dependencies
          3. Fix any import or configuration issues
          4. Re-run the workflow to verify the fix
          EOF

      - name: Create issue on failure
        if: always() && (steps.run_cli.outputs.exit_code != '0' || steps.run_cli.outputs.error_detected == 'true')
        uses: peter-evans/create-issue-from-file@e8ef132d6df98ed982188e460ebb3b5d4ef3a9cd # v5
        with:
          title: CLI Trade Debug Failure – Run ${{ github.run_id }}
          content-filepath: ./issue_content.md
          labels: debug
          assignees: ${{ github.triggering_actor }}
          token: ${{ secrets.GITHUB_TOKEN }}