[
  {
    "file": "examples/policy_layer_usage.py",
    "business_unit": "utilities",
    "status": "legacy",
    "description": "Functions: example_policy_usage, execute_order, get_trading_client, get_data_provider, fractionability_only_example, canonical_executor_integration, get_alpaca_repository"
  },
  {
    "file": "scripts/update_docstrings.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: classify, status"
  },
  {
    "file": "the_alchemiser/main.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: TradingSystem; Functions: _resolve_log_level, configure_application_logging, create_argument_parser, main"
  },
  {
    "file": "the_alchemiser/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/lambda_handler.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: parse_event_mode, lambda_handler"
  },
  {
    "file": "the_alchemiser/infrastructure/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/dependency_injection/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/dependency_injection/config_providers.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ConfigProviders"
  },
  {
    "file": "the_alchemiser/infrastructure/dependency_injection/infrastructure_providers.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: InfrastructureProviders"
  },
  {
    "file": "the_alchemiser/infrastructure/dependency_injection/service_providers.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ServiceProviders"
  },
  {
    "file": "the_alchemiser/infrastructure/dependency_injection/application_container.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ApplicationContainer"
  },
  {
    "file": "the_alchemiser/execution/account_service.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: DataProvider, AccountService"
  },
  {
    "file": "the_alchemiser/application/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/types.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountInfo, PortfolioHistoryData, ClosedPositionData, EnrichedAccountInfo, PositionInfo, OrderDetails, StrategySignalBase, StrategySignal, StrategyPnLSummary, StrategyPositionData, KLMVariantResult, KLMDecision, MarketDataPoint, IndicatorData, PriceData, QuoteData, DataProviderResult, TradeAnalysis, PortfolioSnapshot, ErrorContext, AlpacaOrderProtocol, AlpacaOrderObject"
  },
  {
    "file": "the_alchemiser/interfaces/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/ports/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MarketData, OrderExecution, RiskChecks, PositionStore, Clock, Notifier"
  },
  {
    "file": "the_alchemiser/services/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/utils/serialization.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: _ModelDumpProtocol; Functions: _is_model_dump_obj, to_serializable, ensure_serialized_dict"
  },
  {
    "file": "the_alchemiser/utils/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/utils/num.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: floats_equal"
  },
  {
    "file": "the_alchemiser/utils/common.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ActionType"
  },
  {
    "file": "the_alchemiser/infrastructure/config/execution_config.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: ExecutionConfig; Functions: get_execution_config, reload_execution_config, create_strategy_config"
  },
  {
    "file": "the_alchemiser/infrastructure/config/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/config/config_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: load_alert_config"
  },
  {
    "file": "the_alchemiser/infrastructure/config/config.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: LoggingSettings, AlpacaSettings, AwsSettings, AlertsSettings, SecretsManagerSettings, StrategySettings, EmailSettings, DataSettings, TrackingSettings, ExecutionSettings, Settings; Functions: load_settings"
  },
  {
    "file": "the_alchemiser/infrastructure/secrets/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/secrets/secrets_manager.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: SecretsManager"
  },
  {
    "file": "the_alchemiser/infrastructure/adapters/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/logging/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/logging/logging_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AlchemiserLoggerAdapter, StructuredFormatter; Functions: get_logger, set_request_id, set_error_id, get_request_id, get_error_id, generate_request_id, log_with_context, setup_logging, configure_test_logging, configure_production_logging, get_service_logger, get_trading_logger, log_trade_event, log_error_with_context"
  },
  {
    "file": "the_alchemiser/infrastructure/alerts/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/alerts/alert_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Alert; Functions: create_alert, create_alerts_from_signal, log_alert_to_file, log_alerts_to_file"
  },
  {
    "file": "the_alchemiser/infrastructure/validation/indicator_validator.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: IndicatorValidationSuite"
  },
  {
    "file": "the_alchemiser/infrastructure/validation/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/s3/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/s3/s3_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: S3Handler, S3FileHandler; Functions: get_s3_handler, replace_file_handlers_with_s3"
  },
  {
    "file": "the_alchemiser/infrastructure/websocket/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/websocket/websocket_order_monitor.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderCompletionMonitor"
  },
  {
    "file": "the_alchemiser/infrastructure/websocket/websocket_connection_manager.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: WebSocketConnectionManager"
  },
  {
    "file": "the_alchemiser/infrastructure/services/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/services/tick_size_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: TickSizeProvider, DynamicTickSizeService; Functions: create_tick_size_service, resolve_tick_size"
  },
  {
    "file": "the_alchemiser/infrastructure/services/slippage_analyzer.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: SlippageAnalysis, SlippageAnalyzer; Functions: create_slippage_analyzer"
  },
  {
    "file": "the_alchemiser/infrastructure/data_providers/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/infrastructure/data_providers/real_time_pricing.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: RealTimeQuote, RealTimePricingService, RealTimePricingManager"
  },
  {
    "file": "the_alchemiser/application/reporting/reporting.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: create_execution_summary, save_dashboard_data, build_portfolio_state_data"
  },
  {
    "file": "the_alchemiser/application/reporting/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/execution/order_lifecycle_adapter.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingClientProtocol, WebSocketOrderLifecycleAdapter"
  },
  {
    "file": "the_alchemiser/application/execution/execution_manager.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: ExecutionManager"
  },
  {
    "file": "the_alchemiser/application/execution/spread_assessment.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: SpreadQuality, PreMarketConditions, SpreadAnalysis, SpreadAssessment"
  },
  {
    "file": "the_alchemiser/application/execution/canonical_integration_example.py",
    "business_unit": "order execution/placement",
    "status": "legacy",
    "description": "Functions: dto_to_domain_order_request, execute_order_with_canonical_path, example_integration"
  },
  {
    "file": "the_alchemiser/application/execution/smart_execution.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderExecutor, DataProvider, SmartExecution; Functions: is_market_open"
  },
  {
    "file": "the_alchemiser/application/execution/smart_pricing_handler.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: SmartPricingHandler"
  },
  {
    "file": "the_alchemiser/application/execution/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/execution/canonical_executor.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: CanonicalOrderExecutor"
  },
  {
    "file": "the_alchemiser/application/execution/order_request_builder.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderRequestBuilder"
  },
  {
    "file": "the_alchemiser/application/trading/bootstrap.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingBootstrapContext; Functions: bootstrap_from_container, bootstrap_from_service_manager, bootstrap_traditional"
  },
  {
    "file": "the_alchemiser/application/trading/alpaca_client.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AlpacaClient"
  },
  {
    "file": "the_alchemiser/application/trading/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/trading/ports.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AccountReadPort, OrderExecutionPort, StrategyAdapterPort, RebalancingOrchestratorPort, ReportingPort"
  },
  {
    "file": "the_alchemiser/application/trading/engine_service.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AccountInfoProvider, PositionProvider, PriceProvider, RebalancingService, MultiStrategyExecutor, TradingEngine; Functions: _create_default_account_info, main"
  },
  {
    "file": "the_alchemiser/application/trading/portfolio_calculations.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: AllocationComparison; Functions: _to_decimal, calculate_target_vs_current_allocations, build_allocation_comparison"
  },
  {
    "file": "the_alchemiser/application/trading/account_facade.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AccountFacade; Functions: _create_default_account_info"
  },
  {
    "file": "the_alchemiser/application/policies/policy_factory.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PolicyFactory"
  },
  {
    "file": "the_alchemiser/application/policies/buying_power_policy_impl.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BuyingPowerPolicyImpl"
  },
  {
    "file": "the_alchemiser/application/policies/fractionability_policy_impl.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: FractionabilityPolicyImpl"
  },
  {
    "file": "the_alchemiser/application/policies/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/policies/policy_orchestrator.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PolicyOrchestrator"
  },
  {
    "file": "the_alchemiser/application/policies/position_policy_impl.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PositionPolicyImpl"
  },
  {
    "file": "the_alchemiser/application/policies/risk_policy_impl.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: RiskPolicyImpl"
  },
  {
    "file": "the_alchemiser/application/mapping/account_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountMetrics, AccountSummaryTyped; Functions: to_money_usd, account_summary_to_typed, account_typed_to_serializable"
  },
  {
    "file": "the_alchemiser/application/mapping/alpaca_dto_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: alpaca_order_to_dto, alpaca_dto_to_execution_result, alpaca_order_to_execution_result, create_error_execution_result, alpaca_exception_to_error_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/tracking_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: strategy_order_to_event_dto, event_dto_to_strategy_order_dict, orders_to_execution_summary_dto, strategy_pnl_to_dict, dict_to_strategy_pnl_dict, normalize_timestamp, ensure_decimal_precision, strategy_order_dataclass_to_dto, strategy_order_dto_to_dataclass_dict, strategy_position_dataclass_to_dto, strategy_position_dto_to_dataclass_dict, strategy_pnl_dataclass_to_dto, strategy_pnl_dto_to_dataclass_dict, strategy_pnl_dto_to_dict"
  },
  {
    "file": "the_alchemiser/application/mapping/tracking.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: strategy_order_event_dto_to_dict, strategy_execution_summary_dto_to_dict, dict_to_strategy_order_event_dto, dict_to_strategy_execution_summary_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/strategy_domain_mapping.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Functions: dto_to_strategy_signal_model, strategy_signal_model_to_dto, dto_to_strategy_position_model, strategy_position_model_to_dto, map_strategy_signals_to_models, map_strategy_models_to_dtos, map_strategy_positions_to_models, map_strategy_position_models_to_dtos, normalize_legacy_signal_dict"
  },
  {
    "file": "the_alchemiser/application/mapping/execution.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: _to_decimal, ensure_money, ensure_quantity, _normalize_timestamp_str, _get_attr, _normalize_order_details, _normalize_orders, execution_result_dto_to_dict, dict_to_execution_result_dto, trading_plan_dto_to_dict, dict_to_trading_plan_dto, websocket_result_dto_to_dict, dict_to_websocket_result_dto, quote_dto_to_dict, dict_to_quote_dto, lambda_event_dto_to_dict, dict_to_lambda_event_dto, order_history_dto_to_dict, dict_to_order_history_dto, account_info_to_execution_result_dto, create_trading_plan_dto, create_quote_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/order_mapping.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderSummary; Functions: _coerce_decimal, _map_status, alpaca_order_to_domain, summarize_order, order_to_dict, raw_order_envelope_to_domain_order, raw_order_envelope_to_execution_result_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/mapping/position_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PositionSummary; Functions: _to_decimal, alpaca_position_to_summary"
  },
  {
    "file": "the_alchemiser/application/mapping/tracking_normalization.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: ensure_price, normalize_tracking_order, normalize_pnl_summary"
  },
  {
    "file": "the_alchemiser/application/mapping/market_data_mappers.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: _parse_ts, bars_to_domain, quote_to_domain"
  },
  {
    "file": "the_alchemiser/application/mapping/orders.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: normalize_order_status, dict_to_order_request_dto, order_request_to_validated_dto, validated_dto_to_dict, validated_dto_to_order_handler_params, order_request_dto_to_domain_order_params, domain_order_to_execution_result_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/strategy_signal_mapping.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Functions: _normalize_action, legacy_signal_to_typed, map_signals_dict, typed_dict_to_domain_signal, convert_signals_dict_to_domain, typed_strategy_signal_to_validated_order"
  },
  {
    "file": "the_alchemiser/application/mapping/policy_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: dto_to_domain_order_request, domain_order_request_to_dto, domain_warning_to_dto, dto_warning_to_domain, domain_result_to_dto, dto_to_domain_result"
  },
  {
    "file": "the_alchemiser/application/mapping/pandas_time_series.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: bars_to_dataframe"
  },
  {
    "file": "the_alchemiser/application/mapping/strategy_market_data_adapter.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyMarketDataAdapter"
  },
  {
    "file": "the_alchemiser/application/mapping/strategies.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: StrategySignalDisplayDTO; Functions: handle_portfolio_symbol_alias, format_strategy_signal_for_display, create_empty_signal_dict, typed_signals_to_display_signals_dict, compute_consolidated_portfolio, run_all_strategies_mapping"
  },
  {
    "file": "the_alchemiser/application/mapping/market_data_mapping.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: bars_to_dataframe, quote_to_tuple, symbol_str_to_symbol, quote_to_current_price, dataframe_to_bars"
  },
  {
    "file": "the_alchemiser/application/mapping/trading_service_dto_mapping.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: position_summary_to_dto, dict_to_position_summary_dto, dict_to_portfolio_summary_dto, dict_to_close_position_dto, dict_to_position_analytics_dto, dict_to_position_metrics_dto, account_summary_typed_to_dto, dict_to_enriched_account_summary_dto, dict_to_buying_power_dto, dict_to_risk_metrics_dto, dict_to_trade_eligibility_dto, dict_to_portfolio_allocation_dto, dict_to_price_dto, dict_to_price_history_dto, dict_to_spread_analysis_dto, dict_to_market_status_dto, dict_to_multi_symbol_quotes_dto, dict_to_order_cancellation_dto, dict_to_order_status_dto, dict_to_operation_result_dto, list_to_open_orders_dto, list_to_enriched_positions_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/portfolio_rebalancing_mapping.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Functions: dto_to_domain_rebalance_plan, dto_plans_to_domain, rebalance_plans_dict_to_collection_dto, rebalancing_summary_dict_to_dto, rebalancing_impact_dict_to_dto, rebalance_instruction_dict_to_dto, rebalance_execution_result_dict_to_dto, safe_rebalancing_summary_dict_to_dto, safe_rebalancing_impact_dict_to_dto"
  },
  {
    "file": "the_alchemiser/application/mapping/execution_summary_mapping.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: dict_to_allocation_summary_dto, dict_to_strategy_pnl_summary_dto, dict_to_strategy_summary_dto, dict_to_trading_summary_dto, dict_to_execution_summary_dto, dict_to_portfolio_state_dto, safe_dict_to_execution_summary_dto, safe_dict_to_portfolio_state_dto"
  },
  {
    "file": "the_alchemiser/application/portfolio/rebalancing_orchestrator_facade.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalancingOrchestratorFacade"
  },
  {
    "file": "the_alchemiser/application/portfolio/rebalancing_orchestrator.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalancingOrchestrator"
  },
  {
    "file": "the_alchemiser/application/portfolio/__init__.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/portfolio/portfolio_pnl_utils.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Functions: calculate_strategy_pnl_summary, extract_trading_summary, build_strategy_summary, build_allocation_summary"
  },
  {
    "file": "the_alchemiser/application/tracking/strategy_order_tracker.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyOrder, StrategyPosition, StrategyPnL, StrategyOrderTracker; Functions: get_strategy_tracker"
  },
  {
    "file": "the_alchemiser/application/tracking/integration.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: StrategyExecutionContext, StrategyTrackingMixin; Functions: strategy_execution_context, track_order_execution, get_current_strategy_context, create_strategy_aware_order_callback, extract_order_details_from_alpaca_order, track_alpaca_order_if_filled, configure_strategy_tracking_integration"
  },
  {
    "file": "the_alchemiser/application/tracking/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/orders/order_validation.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderValidationError, RiskLimits, ValidationResult, OrderValidator; Functions: validate_order_list"
  },
  {
    "file": "the_alchemiser/application/orders/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/orders/progressive_order_utils.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderExecutionParams, ProgressiveOrderCalculator; Functions: get_market_urgency_level"
  },
  {
    "file": "the_alchemiser/application/orders/order_validation_utils.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: validate_quantity, validate_notional, validate_order_parameters, round_quantity_for_asset"
  },
  {
    "file": "the_alchemiser/application/orders/asset_order_handler.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AssetOrderHandler"
  },
  {
    "file": "the_alchemiser/application/execution/strategies/aggressive_limit_strategy.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: ExecutionContext, AggressiveLimitStrategy"
  },
  {
    "file": "the_alchemiser/application/execution/strategies/execution_context_adapter.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: ExecutionContextAdapter"
  },
  {
    "file": "the_alchemiser/application/execution/strategies/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/execution/strategies/repeg_strategy.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: AttemptPlan, AttemptResult, AttemptState, RepegStrategy"
  },
  {
    "file": "the_alchemiser/application/execution/strategies/config.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: StrategyConfig, StrategyConfigProvider"
  },
  {
    "file": "the_alchemiser/application/trading/lifecycle/observers.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: LoggingObserver, MetricsObserver"
  },
  {
    "file": "the_alchemiser/application/trading/lifecycle/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/trading/lifecycle/manager.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderLifecycleManager"
  },
  {
    "file": "the_alchemiser/application/trading/lifecycle/dispatcher.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: LifecycleEventDispatcher"
  },
  {
    "file": "the_alchemiser/application/portfolio/services/__init__.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/application/portfolio/services/portfolio_rebalancing_service.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: PortfolioRebalancingService"
  },
  {
    "file": "the_alchemiser/application/portfolio/services/portfolio_management_facade.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: PortfolioManagementFacade"
  },
  {
    "file": "the_alchemiser/application/portfolio/services/portfolio_analysis_service.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: PortfolioAnalysisService"
  },
  {
    "file": "the_alchemiser/application/portfolio/services/rebalance_execution_service.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalanceExecutionService"
  },
  {
    "file": "the_alchemiser/domain/trading/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/market_data/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/dsl/parser.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Vector, DSLParser"
  },
  {
    "file": "the_alchemiser/domain/dsl/evaluator.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: DSLEvaluator"
  },
  {
    "file": "the_alchemiser/domain/dsl/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/dsl/evaluator_cache.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: EvalContext, NodeEvaluationCache; Functions: create_eval_context, get_memo_stats, clear_memo_stats, is_pure_node, _structural_key, _stable_value, ensure_node_id"
  },
  {
    "file": "the_alchemiser/domain/dsl/strategy_loader.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyLoader, StrategyResult"
  },
  {
    "file": "the_alchemiser/domain/dsl/ast.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ASTNode, NumberLiteral, Symbol, GreaterThan, LessThan, If, RSI, MovingAveragePrice, MovingAverageReturn, CumulativeReturn, CurrentPrice, StdevReturn, Asset, Group, WeightEqual, WeightSpecified, WeightInverseVolatility, Filter, SelectTop, SelectBottom, FunctionCall, Strategy"
  },
  {
    "file": "the_alchemiser/domain/dsl/optimization_config.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: DSLOptimizationConfig; Functions: _env_bool, _env_int, _env_parallel_enabled, _env_parallel_mode, get_default_config, set_default_config, configure_from_environment, get_optimization_stats"
  },
  {
    "file": "the_alchemiser/domain/dsl/errors.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: DSLError, ParseError, SchemaError, EvaluationError, SecurityError, IndicatorError, PortfolioError"
  },
  {
    "file": "the_alchemiser/domain/dsl/interning.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: node_key, _stable_value, intern_node, _compute_node_id, canonicalise_ast, _canonicalise_recursive, _canonicalise_value, get_intern_stats, clear_intern_stats, clear_intern_pool"
  },
  {
    "file": "the_alchemiser/domain/registry/strategy_registry.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyType, StrategyConfig, StrategyRegistry"
  },
  {
    "file": "the_alchemiser/domain/registry/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/types.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/interfaces/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/interfaces/market_data_repository.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MarketDataRepository"
  },
  {
    "file": "the_alchemiser/domain/interfaces/trading_repository.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingRepository"
  },
  {
    "file": "the_alchemiser/domain/interfaces/account_repository.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountRepository"
  },
  {
    "file": "the_alchemiser/domain/policies/policy_result.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PolicyWarning, PolicyResult; Functions: create_approved_result, create_rejected_result"
  },
  {
    "file": "the_alchemiser/domain/policies/base_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: OrderPolicy"
  },
  {
    "file": "the_alchemiser/domain/policies/risk_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: RiskPolicy"
  },
  {
    "file": "the_alchemiser/domain/policies/protocols.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: TradingClientProtocol, DataProviderProtocol"
  },
  {
    "file": "the_alchemiser/domain/policies/buying_power_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BuyingPowerPolicy"
  },
  {
    "file": "the_alchemiser/domain/policies/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/policies/fractionability_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: FractionabilityPolicy"
  },
  {
    "file": "the_alchemiser/domain/policies/position_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PositionPolicy"
  },
  {
    "file": "the_alchemiser/domain/portfolio/__init__.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/typed_strategy_manager.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: AggregatedSignals, TypedStrategyManager"
  },
  {
    "file": "the_alchemiser/domain/strategies/nuclear_logic.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: evaluate_nuclear_strategy"
  },
  {
    "file": "the_alchemiser/domain/strategies/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/typed_klm_ensemble_engine.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: TypedKLMStrategyEngine"
  },
  {
    "file": "the_alchemiser/domain/strategies/tecl_strategy_engine.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: TECLStrategyEngine; Functions: main"
  },
  {
    "file": "the_alchemiser/domain/strategies/strategy_manager.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/nuclear_typed_engine.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: NuclearTypedEngine"
  },
  {
    "file": "the_alchemiser/domain/strategies/engine.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: StrategyEngine"
  },
  {
    "file": "the_alchemiser/domain/services/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/services/rebalancing_policy.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: calculate_rebalance_orders"
  },
  {
    "file": "the_alchemiser/domain/math/trading_math.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Functions: calculate_position_size, calculate_dynamic_limit_price, calculate_dynamic_limit_price_with_symbol, calculate_slippage_buffer, calculate_allocation_discrepancy, calculate_rebalance_amounts"
  },
  {
    "file": "the_alchemiser/domain/math/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/math/indicator_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: safe_get_indicator"
  },
  {
    "file": "the_alchemiser/domain/math/asset_info.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AssetType, FractionabilityDetector"
  },
  {
    "file": "the_alchemiser/domain/math/math_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: calculate_stdev_returns, calculate_moving_average, calculate_moving_average_return, calculate_percentage_change, calculate_rolling_metric, safe_division, normalize_to_range, calculate_ensemble_score"
  },
  {
    "file": "the_alchemiser/domain/math/market_timing_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ExecutionStrategy, MarketOpenTimingEngine"
  },
  {
    "file": "the_alchemiser/domain/math/indicators.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: TechnicalIndicators"
  },
  {
    "file": "the_alchemiser/domain/models/strategy.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategySignalModel, StrategyPositionModel"
  },
  {
    "file": "the_alchemiser/domain/models/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/models/market_data.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BarModel, QuoteModel, PriceDataModel; Functions: bars_to_dataframe, dataframe_to_bars"
  },
  {
    "file": "the_alchemiser/domain/models/position.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PositionModel"
  },
  {
    "file": "the_alchemiser/domain/models/account.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountModel, PortfolioHistoryModel"
  },
  {
    "file": "the_alchemiser/domain/models/order.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderModel"
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/exceptions.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: InvalidOrderStateTransitionError"
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/protocols.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: LifecycleObserver"
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/states.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderLifecycleState"
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/events.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: LifecycleEventType, OrderLifecycleEvent"
  },
  {
    "file": "the_alchemiser/domain/trading/lifecycle/transitions.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/trading/protocols/order_lifecycle.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderLifecycleMonitor"
  },
  {
    "file": "the_alchemiser/domain/trading/protocols/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/trading/protocols/trading_repository.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingRepository"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/symbol.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: Symbol"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/order_type.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderType"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/order_request.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderRequest"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/quantity.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: Quantity"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/order_id.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderId"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/order_status.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderStatus"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/side.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: Side"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/time_in_force.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TimeInForce"
  },
  {
    "file": "the_alchemiser/domain/trading/value_objects/order_status_literal.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/trading/errors/error_codes.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderErrorCode"
  },
  {
    "file": "the_alchemiser/domain/trading/errors/classifier.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: ClassificationRule, OrderErrorClassifier; Functions: classify_exception, classify_alpaca_error, classify_validation_failure"
  },
  {
    "file": "the_alchemiser/domain/trading/errors/order_error.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderError; Functions: get_remediation_hint"
  },
  {
    "file": "the_alchemiser/domain/trading/errors/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/trading/errors/error_categories.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderErrorCategory"
  },
  {
    "file": "the_alchemiser/domain/trading/entities/order.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: Order"
  },
  {
    "file": "the_alchemiser/domain/market_data/protocols/market_data_port.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MarketDataPort"
  },
  {
    "file": "the_alchemiser/domain/market_data/models/quote.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: QuoteModel"
  },
  {
    "file": "the_alchemiser/domain/market_data/models/bar.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BarModel"
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/value_objects/identifier.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Identifier"
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/value_objects/symbol.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Symbol"
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/value_objects/money.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Money"
  },
  {
    "file": "the_alchemiser/domain/shared_kernel/value_objects/percentage.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Percentage"
  },
  {
    "file": "the_alchemiser/domain/portfolio/strategy_attribution/symbol_classifier.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: SymbolClassifier"
  },
  {
    "file": "the_alchemiser/domain/portfolio/strategy_attribution/__init__.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/portfolio/strategy_attribution/attribution_engine.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyAttributionEngine"
  },
  {
    "file": "the_alchemiser/domain/portfolio/position/position_analyzer.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: PositionAnalyzer"
  },
  {
    "file": "the_alchemiser/domain/portfolio/position/position_delta.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: PositionDelta"
  },
  {
    "file": "the_alchemiser/domain/portfolio/position/__init__.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/portfolio/rebalancing/rebalance_plan.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalancePlan"
  },
  {
    "file": "the_alchemiser/domain/portfolio/rebalancing/__init__.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/portfolio/rebalancing/rebalance_calculator.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalanceCalculator"
  },
  {
    "file": "the_alchemiser/domain/strategies/protocols/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/protocols/strategy_engine.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyEngine"
  },
  {
    "file": "the_alchemiser/domain/strategies/value_objects/alert.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Alert"
  },
  {
    "file": "the_alchemiser/domain/strategies/value_objects/strategy_signal.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategySignal"
  },
  {
    "file": "the_alchemiser/domain/strategies/value_objects/confidence.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: Confidence"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_506_38.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant50638"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_1200_28.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant120028"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_nova.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KLMVariantNova"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/base_klm_variant.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BaseKLMVariant"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_520_22.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant52022"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_410_38.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant41038"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_530_18.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant53018"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_830_21.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant83021"
  },
  {
    "file": "the_alchemiser/domain/strategies/klm_workers/variant_1280_26.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: KlmVariant128026"
  },
  {
    "file": "the_alchemiser/domain/strategies/entities/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/models/strategy_position_model.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyPositionModel"
  },
  {
    "file": "the_alchemiser/domain/strategies/models/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/domain/strategies/models/strategy_signal_model.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategySignalModel"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/cli.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: CLIOptions, CLICommandResult, CLISignalData, CLIAccountDisplay, CLIPortfolioData, CLIOrderDisplay"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/smart_trading.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderValidationMetadataDTO, SmartOrderExecutionDTO, TradingDashboardDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/tracking.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: OrderEventStatus, ExecutionStatus, StrategyValidationMixin, StrategyOrderEventDTO, StrategyOrderDTO, StrategyPositionDTO, StrategyPnLDTO, StrategyExecutionSummaryDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/execution.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingAction, WebSocketStatus, ExecutionResultDTO, TradingPlanDTO, WebSocketResultDTO, QuoteDTO, LambdaEventDTO, OrderHistoryDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/reporting.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: DashboardMetrics, ReportingData, EmailReportData, EmailCredentials, EmailSummary, BacktestResult, PerformanceMetrics"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/interfaces/schemas/execution_summary.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: AllocationSummaryDTO, StrategyPnLSummaryDTO, StrategySummaryDTO, TradingSummaryDTO, ExecutionSummaryDTO, PortfolioStateDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/enriched_data.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: EnrichedOrderDTO, OpenOrdersDTO, EnrichedPositionDTO, EnrichedPositionsDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/orders.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderValidationMixin, OrderRequestDTO, ValidatedOrderDTO, OrderExecutionResultDTO, LimitOrderResultDTO, RawOrderEnvelope, AdjustedOrderRequestDTO, PolicyWarningDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/market_data.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PriceDTO, PriceHistoryDTO, SpreadAnalysisDTO, MarketStatusDTO, MultiSymbolQuotesDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/base.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ResultDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/common.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MultiStrategyExecutionResultDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/portfolio_rebalancing.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: RebalancePlanDTO, RebalancePlanCollectionDTO, RebalancingSummaryDTO, RebalancingImpactDTO, RebalanceInstructionDTO, RebalanceExecutionResultDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/alpaca.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AlpacaOrderDTO, AlpacaErrorDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/accounts.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountSummaryDTO, AccountMetricsDTO, BuyingPowerDTO, RiskMetricsDTO, TradeEligibilityDTO, PortfolioAllocationDTO, EnrichedAccountSummaryDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/operations.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: OperationResultDTO, OrderCancellationDTO, OrderStatusDTO"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/errors.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorDetailInfo, ErrorSummaryData, ErrorReportSummary, ErrorNotificationData, ErrorContextData"
  },
  {
    "file": "the_alchemiser/interfaces/schemas/positions.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PositionDTO, PositionSummaryDTO, PortfolioSummaryDTO, PortfolioMetricsDTO, PositionAnalyticsDTO, PositionMetricsDTO, LargestPositionDTO, ClosePositionResultDTO, PortfolioValueDTO"
  },
  {
    "file": "the_alchemiser/services/repository/alpaca_manager.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AlpacaManager; Functions: create_alpaca_manager"
  },
  {
    "file": "the_alchemiser/services/repository/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/trading/position_manager.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: PositionManager"
  },
  {
    "file": "the_alchemiser/services/trading/__init__.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/trading/order_service.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: OrderType, OrderValidationError, OrderOperationError, OrderService"
  },
  {
    "file": "the_alchemiser/services/trading/position_service.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: PositionInfo, PortfolioSummary, PositionValidationError, PositionService"
  },
  {
    "file": "the_alchemiser/services/trading/trading_service_manager.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingServiceManager"
  },
  {
    "file": "the_alchemiser/services/market_data/streaming_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: _RealTimePricingProtocol, StreamingService"
  },
  {
    "file": "the_alchemiser/services/market_data/price_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: ensure_scalar_price"
  },
  {
    "file": "the_alchemiser/services/market_data/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/market_data/market_data_client.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MarketDataClient"
  },
  {
    "file": "the_alchemiser/services/market_data/strategy_market_data_service.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: StrategyMarketDataService"
  },
  {
    "file": "the_alchemiser/services/market_data/price_fetching_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: subscribe_for_real_time, extract_bid_ask, calculate_price_from_bid_ask, get_price_from_quote_api, get_price_from_historical_fallback, create_cleanup_function"
  },
  {
    "file": "the_alchemiser/services/market_data/market_data_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: MarketDataService"
  },
  {
    "file": "the_alchemiser/services/market_data/price_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ModernPriceFetchingService"
  },
  {
    "file": "the_alchemiser/services/errors/handler.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorSeverity, ErrorCategory, ErrorDetails, EnhancedAlchemiserError, TradingSystemErrorHandler, EnhancedTradingError, EnhancedDataError, CircuitBreakerOpenError, CircuitBreaker, EnhancedErrorReporter; Functions: get_error_handler, handle_trading_error, send_error_notification_if_needed, retry_with_backoff, categorize_error_severity, create_enhanced_error, get_enhanced_error_reporter, get_global_error_reporter, handle_errors_with_retry"
  },
  {
    "file": "the_alchemiser/services/errors/error_recovery.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: RecoveryResult, ErrorRecoveryStrategy, TradingErrorRecovery, DataErrorRecovery, CircuitState, CircuitBreakerOpenError, CircuitBreaker, RetryStrategy, ExponentialBackoffStrategy, LinearBackoffStrategy, FixedIntervalStrategy, FibonacciBackoffStrategy, SmartRetryManager, ErrorRecoveryManager; Functions: get_recovery_manager, with_circuit_breaker, with_retry, with_resilience"
  },
  {
    "file": "the_alchemiser/services/errors/exceptions.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AlchemiserError, ConfigurationError, DataProviderError, TradingClientError, OrderExecutionError, OrderPlacementError, OrderTimeoutError, SpreadAnalysisError, BuyingPowerError, InsufficientFundsError, PositionValidationError, StrategyExecutionError, IndicatorCalculationError, MarketDataError, ValidationError, NotificationError, S3OperationError, RateLimitError, MarketClosedError, WebSocketError, StreamingError, LoggingError, FileOperationError, DatabaseError, SecurityError, EnvironmentError"
  },
  {
    "file": "the_alchemiser/services/errors/error_reporter.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorReporter; Functions: get_error_reporter, report_error_globally"
  },
  {
    "file": "the_alchemiser/services/errors/error_handling.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorHandler, ServiceMetrics, ErrorContext; Functions: create_service_logger, _deprecated_decorator_stub, _deprecated_instance_stub, with_metrics"
  },
  {
    "file": "the_alchemiser/services/errors/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/errors/decorators.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: translate_service_errors, translate_market_data_errors, translate_trading_errors, translate_streaming_errors, translate_config_errors"
  },
  {
    "file": "the_alchemiser/services/errors/scope.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: _ScopeErrorHandler, ErrorScope; Functions: create_error_scope"
  },
  {
    "file": "the_alchemiser/services/errors/context.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorContextData; Functions: create_error_context"
  },
  {
    "file": "the_alchemiser/services/errors/error_monitoring.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: HealthStatus, ErrorEvent, RecoveryStats, ErrorMetricsCollector, AlertThresholdManager, HealthReport, ErrorHealthDashboard, ProductionMonitor; Functions: get_production_monitor, record_error_for_monitoring, record_recovery_for_monitoring, get_system_health, get_health_dashboard"
  },
  {
    "file": "the_alchemiser/services/account/account_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: extract_comprehensive_account_data, extract_basic_account_metrics, calculate_position_target_deltas, extract_current_position_values"
  },
  {
    "file": "the_alchemiser/services/account/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/account/account_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: AccountService"
  },
  {
    "file": "the_alchemiser/services/shared/config_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ConfigService"
  },
  {
    "file": "the_alchemiser/services/shared/service_factory.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ServiceFactory"
  },
  {
    "file": "the_alchemiser/services/shared/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/services/shared/retry_decorator.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: retry_with_backoff, retry_api_call, retry_data_fetch, retry_order_execution"
  },
  {
    "file": "the_alchemiser/services/shared/cache_manager.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: CacheManager"
  },
  {
    "file": "the_alchemiser/services/shared/secrets_service.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: SecretsService"
  },
  {
    "file": "the_alchemiser/interface/cli/signal_analyzer.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: SignalAnalyzer"
  },
  {
    "file": "the_alchemiser/interface/cli/cli.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: show_welcome, signal, trade, status, dsl_count, deploy, version, validate_indicators, main"
  },
  {
    "file": "the_alchemiser/interface/cli/signal_display_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: display_signal_results, display_typed_signal_results, display_signal_results_unified, display_technical_indicators, display_portfolio_details"
  },
  {
    "file": "the_alchemiser/interface/cli/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/interface/cli/cli_formatter.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: render_technical_indicators, render_strategy_signals, render_portfolio_allocation, render_orders_executed, _format_money, render_account_info, render_header, render_footer, render_target_vs_current_allocations, render_execution_plan, render_enriched_order_summaries, render_multi_strategy_summary"
  },
  {
    "file": "the_alchemiser/interface/cli/trading_executor.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingExecutor"
  },
  {
    "file": "the_alchemiser/interface/cli/portfolio_calculations.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Functions: calculate_target_vs_current_allocations"
  },
  {
    "file": "the_alchemiser/interface/cli/error_display_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: render_order_error, render_order_errors_table, render_error_summary, format_error_for_notification, _get_error_severity"
  },
  {
    "file": "the_alchemiser/interface/cli/dashboard_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: build_basic_dashboard_structure, extract_portfolio_metrics, extract_positions_data, extract_strategies_data, extract_recent_trades_data, build_s3_paths"
  },
  {
    "file": "the_alchemiser/interface/email/client.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: EmailClient; Functions: send_email_notification"
  },
  {
    "file": "the_alchemiser/interface/email/email_utils.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Functions: _build_portfolio_display, _build_closed_positions_pnl_email_html, _build_technical_indicators_email_html, _build_detailed_strategy_signals_email_html, _build_enhanced_trading_summary_email_html, _build_enhanced_portfolio_email_html"
  },
  {
    "file": "the_alchemiser/interface/email/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": ""
  },
  {
    "file": "the_alchemiser/interface/email/config.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: EmailConfig; Functions: get_email_config, is_neutral_mode_enabled"
  },
  {
    "file": "the_alchemiser/interface/email/templates/performance.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: PerformanceBuilder"
  },
  {
    "file": "the_alchemiser/interface/email/templates/multi_strategy.py",
    "business_unit": "strategy & signal generation",
    "status": "current",
    "description": "Classes: MultiStrategyReportBuilder"
  },
  {
    "file": "the_alchemiser/interface/email/templates/__init__.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: EmailTemplates; Functions: build_trading_report_html, build_multi_strategy_email_html, build_multi_strategy_email_html_neutral, build_error_email_html"
  },
  {
    "file": "the_alchemiser/interface/email/templates/base.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: BaseEmailTemplate"
  },
  {
    "file": "the_alchemiser/interface/email/templates/trading_report.py",
    "business_unit": "order execution/placement",
    "status": "current",
    "description": "Classes: TradingReportBuilder"
  },
  {
    "file": "the_alchemiser/interface/email/templates/error_report.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: ErrorReportBuilder"
  },
  {
    "file": "the_alchemiser/interface/email/templates/portfolio.py",
    "business_unit": "portfolio assessment & management",
    "status": "current",
    "description": "Classes: ExecutionSummaryLike, PortfolioBuilder; Functions: _normalise_result"
  },
  {
    "file": "the_alchemiser/interface/email/templates/signals.py",
    "business_unit": "utilities",
    "status": "current",
    "description": "Classes: SignalsBuilder"
  }
]
