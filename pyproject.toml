[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "the-alchemiser"
version = "2.0.0"
description = "Advanced Multi-Strategy Quantitative Trading System with Nuclear and TECL strategies"
readme = "README.md"
authors = ["Josh Moreton <josh@example.com>"]
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
packages = [{include = "the_alchemiser"}]

[tool.poetry.dependencies]
python = ">=3.12,<4.0.0"
alpaca-py = "0.42.1"
numpy = "1.26.4"
pandas = "2.3.2"
python-dateutil = "2.9.0.post0"
tqdm = "4.67.1"
setuptools = "80.9.0"
requests = "2.32.5"
PyYAML = "6.0.2"
boto3 = "1.40.21"
typer = ">=0.9.0"
pydantic = ">=2.0.0"
pydantic-settings = ">=2.0.0"
rich = ">=13.0.0"
cachetools = "^6.1.0"
dependency-injector = "^4.48.1"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.1.0"
mypy = ">=1.0.0"
pre-commit = "^4.3.0"
types-PyYAML = ">=6.0.0"
types-requests = ">=2.31.0"
types-pytz = ">=2023.3.0"
bandit = ">=1.7.0"  # Legacy direct usage; Ruff "S" rules supplement
vulture = "^2.14"   # Dead code detection
psutil = "^7.0.0"
pydocstyle = ">=6.0.0"  # Docstring style (Ruff D rules)
pytest = "^8.4.1"
pip-audit = "^2.7.3"  # Dependency vulnerability scanning
detect-secrets = "^1.5.0"  # Secret scanning (baseline optional)
pyright = "^1.1.380"  # Supplemental static type analysis (optional CI/nightly)
import-linter = "^2.0"  # Module dependency enforcement

[tool.poetry.scripts]
alchemiser = "the_alchemiser.shared.cli.cli:app"

[tool.poetry.urls]
Homepage = "https://github.com/Josh-moreton/The-Alchemiser"
Repository = "https://github.com/Josh-moreton/The-Alchemiser"
Issues = "https://github.com/Josh-moreton/The-Alchemiser/issues"

[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E","F","I",
    "UP",
    "B","C4","SIM",
    "PTH","DTZ","Q",
    "PIE","RET","FBT",
    "ANN",
    "D",
    "S",
    "RUF"
]
ignore = [
    "E501",
    "B008",
    "B904",
    # Docstring rule conflicts (prefer D211, D212)
    "D203",
    "D213",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["the_alchemiser"]

[tool.mypy]
python_version = "3.12"
strict = true
plugins = ["pydantic.mypy"]
files = ["the_alchemiser"]
show_error_codes = true
pretty = true
color_output = true
cache_dir = ".mypy_cache"

# Progressive type checking for migration
# Focus on new modular structure with strict enforcement
# Legacy code excluded until migration complete
exclude = [
    # Legacy DDD structure - exclude until migration complete
    "the_alchemiser/application/",
    "the_alchemiser/domain/",
    "the_alchemiser/infrastructure/config/execution_config.py",
    "the_alchemiser/services/",
    "the_alchemiser/utils/",
    # Exclude problematic legacy files
    "the_alchemiser/.*_backup/",
    "the_alchemiser/.*/.*original.*",
]

# Retain targeted ignores for third-party libs lacking type hints
[[tool.mypy.overrides]]
module = [
    "alpaca.*",
    "boto3.*",
    "botocore.*",
    "pandas.*",
    "numpy.*",
    "tqdm.*",
    "yaml.*"
]
ignore_missing_imports = true

[tool.importlinter]
root_package = "the_alchemiser"

# Progressive enforcement: Start with basic rules and add stricter ones as migration progresses
[[tool.importlinter.contracts]]
name = "Shared module isolation (enforced)"
type = "forbidden"
source_modules = [
    "the_alchemiser.shared"
]
forbidden_modules = [
    "the_alchemiser.strategy",
    "the_alchemiser.portfolio",
    "the_alchemiser.execution"
]

# These contracts check for violations but don't fail CI initially
# Uncomment progressively as migration advances

# [[tool.importlinter.contracts]]
# name = "No strategy to portfolio/execution imports"
# type = "forbidden"
# source_modules = [
#     "the_alchemiser.strategy"
# ]
# forbidden_modules = [
#     "the_alchemiser.portfolio",
#     "the_alchemiser.execution"
# ]

# [[tool.importlinter.contracts]]
# name = "No portfolio to execution imports"
# type = "forbidden"
# source_modules = [
#     "the_alchemiser.portfolio"
# ]
# forbidden_modules = [
#     "the_alchemiser.execution"
# ]

# [[tool.importlinter.contracts]]
# name = "No execution to portfolio imports"
# type = "forbidden"
# source_modules = [
#     "the_alchemiser.execution"
# ]
# forbidden_modules = [
#     "the_alchemiser.portfolio"
# ]

# [[tool.importlinter.contracts]]
# name = "Modules may only import from shared"
# type = "layers"
# layers = [
#     "the_alchemiser.shared",
#     "the_alchemiser.strategy | the_alchemiser.portfolio | the_alchemiser.execution"
# ]
