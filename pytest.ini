# pytest configuration for Alchemiser Quantitative Trading System testing

[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add project root to pythonpath so 'core' and 'execution' are importable
pythonpath = .

# Test markers for categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (moderate speed)
    slow: Slow tests (network, API calls, backtest)
    external: Tests requiring external APIs
    manual: Manual/optional tests
    network: Tests requiring network access

# Output formatting with optimizations
addopts =
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --timeout=30
    --maxfail=3
    -x
    --cov=the_alchemiser
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=60

# Test timeout (prevent hanging tests)
timeout = 30
timeout_method = thread

# Coverage configuration
[coverage:run]
source = the_alchemiser
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */site-packages/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    performance: Performance and load testing
    market_scenarios: Tests for specific market conditions
    slow: Tests that take a long time to run
    api: Tests that require external API access
    mock: Tests that use mocking extensively

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300
