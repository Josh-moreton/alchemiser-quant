# Pre-commit hooks for The Alchemiser - automated code quality on commit
# All tool configurations are in pyproject.toml
# Runs on the entire the_alchemiser/ directory to ensure consistency
# Prevents double-formatting issues by matching make commands exactly

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: end-of-file-fixer
        files: ^the_alchemiser/.*\.py$
      - id: trailing-whitespace
        files: ^the_alchemiser/.*\.py$

  - repo: local
    hooks:
      # Format first - matches `make format` exactly
      - id: ruff-format
        name: Ruff Formatter (matches make format)
        entry: poetry run ruff format the_alchemiser/
        language: system
        types: [python]
        files: ^the_alchemiser/.*\.py$
        pass_filenames: false  # Run on entire directory like make command
        stages: [pre-commit]

      # Then fix auto-fixable lints - matches `make format` exactly
      - id: ruff-check-fix
        name: Ruff Auto-fix (matches make format)
        entry: poetry run ruff check --fix the_alchemiser/
        language: system
        types: [python]
        files: ^the_alchemiser/.*\.py$
        pass_filenames: false  # Run on entire directory like make command
        stages: [pre-commit]

      # Check remaining lints - matches `make lint`
      - id: ruff-check
        name: Ruff Lint Check (matches make lint)
        entry: poetry run ruff check the_alchemiser/
        language: system
        types: [python]
        files: ^the_alchemiser/.*\.py$
        pass_filenames: false  # Run on entire directory like make command
        stages: [pre-commit]

      # Type check - matches `make type-check`
      - id: mypy-typecheck
        name: MyPy Type Checking (matches make type-check)
        entry: poetry run mypy the_alchemiser/ --config-file=pyproject.toml
        language: system
        types: [python]
        files: ^the_alchemiser/.*\.py$
        pass_filenames: false  # Run on entire directory like make command
        stages: [pre-commit]
